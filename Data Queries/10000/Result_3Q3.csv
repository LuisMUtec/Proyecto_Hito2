Sort  (cost=4990.12..5033.41 rows=17315 width=121) (actual time=101.727..101.768 rows=933 loops=1)
"  Output: e_1.nombre, (count(DISTINCT m.dni)), (count(DISTINCT CASE WHEN (c.fecha >= (CURRENT_DATE - '1 mon'::interval)) THEN m.dni ELSE NULL::bpchar END)), (count(c_1.id_cita)), (count(CASE WHEN ((c_1.estado)::text = 'cancelada'::text) THEN 1 ELSE NULL::integer END)), (count(CASE WHEN (c_1.fecha > CURRENT_DATE) THEN 1 ELSE NULL::integer END)), (round((((count(c_1.id_cita)))::numeric / (NULLIF((count(DISTINCT CASE WHEN (c.fecha >= (CURRENT_DATE - '1 mon'::interval)) THEN m.dni ELSE NULL::bpchar END)), 0))::numeric), 2)), (round(((((count(CASE WHEN ((c_1.estado)::text = 'cancelada'::text) THEN 1 ELSE NULL::integer END)))::numeric * 100.0) / ((count(c_1.id_cita)))::numeric), 2))"
"  Sort Key: (round((((count(c_1.id_cita)))::numeric / (NULLIF((count(DISTINCT CASE WHEN (c.fecha >= (CURRENT_DATE - '1 mon'::interval)) THEN m.dni ELSE NULL::bpchar END)), 0))::numeric), 2)) DESC"
  Sort Method: quicksort  Memory: 128kB
  Buffers: shared hit=727
  ->  Hash Join  (cost=2996.02..3771.16 rows=17315 width=121) (actual time=81.590..101.416 rows=933 loops=1)
"        Output: e_1.nombre, (count(DISTINCT m.dni)), (count(DISTINCT CASE WHEN (c.fecha >= (CURRENT_DATE - '1 mon'::interval)) THEN m.dni ELSE NULL::bpchar END)), (count(c_1.id_cita)), (count(CASE WHEN ((c_1.estado)::text = 'cancelada'::text) THEN 1 ELSE NULL::integer END)), (count(CASE WHEN (c_1.fecha > CURRENT_DATE) THEN 1 ELSE NULL::integer END)), round((((count(c_1.id_cita)))::numeric / (NULLIF((count(DISTINCT CASE WHEN (c.fecha >= (CURRENT_DATE - '1 mon'::interval)) THEN m.dni ELSE NULL::bpchar END)), 0))::numeric), 2), round(((((count(CASE WHEN ((c_1.estado)::text = 'cancelada'::text) THEN 1 ELSE NULL::integer END)))::numeric * 100.0) / ((count(c_1.id_cita)))::numeric), 2)"
        Inner Unique: true
        Hash Cond: ((e.nombre)::text = (e_1.nombre)::text)
        Buffers: shared hit=727
        ->  GroupAggregate  (cost=2051.41..2351.41 rows=3333 width=33) (actual time=75.534..94.001 rows=6301 loops=1)
"              Output: e.nombre, count(DISTINCT m.dni), count(DISTINCT CASE WHEN (c.fecha >= (CURRENT_DATE - '1 mon'::interval)) THEN m.dni ELSE NULL::bpchar END)"
              Group Key: e.nombre
              Filter: (count(DISTINCT m.dni) > 0)
              Rows Removed by Filter: 3699
              Buffers: shared hit=422
              ->  Sort  (cost=2051.41..2076.41 rows=10000 width=30) (actual time=75.496..76.974 rows=17438 loops=1)
"                    Output: e.nombre, m.dni, c.fecha"
                    Sort Key: e.nombre
                    Sort Method: quicksort  Memory: 1965kB
                    Buffers: shared hit=422
                    ->  Hash Right Join  (cost=973.00..1387.02 rows=10000 width=30) (actual time=5.759..15.768 rows=17438 loops=1)
"                          Output: e.nombre, m.dni, c.fecha"
                          Inner Unique: true
                          Hash Cond: ((me.nombre_especialidad)::text = (e.nombre)::text)
                          Buffers: shared hit=422
                          ->  Hash Right Join  (cost=641.00..1028.76 rows=10000 width=30) (actual time=3.945..10.662 rows=13739 loops=1)
"                                Output: me.nombre_especialidad, m.dni, c.fecha"
                                Hash Cond: (m.dni = me.dni_medico)
                                Buffers: shared hit=315
                                ->  Hash Right Join  (cost=342.00..592.26 rows=10000 width=13) (actual time=1.892..5.335 rows=13739 loops=1)
"                                      Output: m.dni, c.fecha"
                                      Inner Unique: true
                                      Hash Cond: (c.dni_medico = m.dni)
                                      Buffers: shared hit=241
                                      ->  Seq Scan on public.cita c  (cost=0.00..224.00 rows=10000 width=13) (actual time=0.004..0.537 rows=10000 loops=1)
"                                            Output: c.id_cita, c.dni_paciente, c.dni_medico, c.fecha, c.hora, c.estado, c.dni_personal, c.numero_consultorio"
                                            Buffers: shared hit=124
                                      ->  Hash  (cost=217.00..217.00 rows=10000 width=9) (actual time=1.876..1.877 rows=10000 loops=1)
                                            Output: m.dni
                                            Buckets: 16384  Batches: 1  Memory Usage: 529kB
                                            Buffers: shared hit=117
                                            ->  Seq Scan on public.medico m  (cost=0.00..217.00 rows=10000 width=9) (actual time=0.004..0.773 rows=10000 loops=1)
                                                  Output: m.dni
                                                  Buffers: shared hit=117
                                ->  Hash  (cost=174.00..174.00 rows=10000 width=26) (actual time=2.040..2.041 rows=10000 loops=1)
"                                      Output: me.nombre_especialidad, me.dni_medico"
                                      Buckets: 16384  Batches: 1  Memory Usage: 704kB
                                      Buffers: shared hit=74
                                      ->  Seq Scan on public.medico_especialidad me  (cost=0.00..174.00 rows=10000 width=26) (actual time=0.004..0.791 rows=10000 loops=1)
"                                            Output: me.nombre_especialidad, me.dni_medico"
                                            Buffers: shared hit=74
                          ->  Hash  (cost=207.00..207.00 rows=10000 width=17) (actual time=1.802..1.803 rows=10000 loops=1)
                                Output: e.nombre
                                Buckets: 16384  Batches: 1  Memory Usage: 616kB
                                Buffers: shared hit=107
                                ->  Seq Scan on public.especialidad e  (cost=0.00..207.00 rows=10000 width=17) (actual time=0.006..0.649 rows=10000 loops=1)
                                      Output: e.nombre
                                      Buffers: shared hit=107
        ->  Hash  (cost=931.63..931.63 rows=1039 width=41) (actual time=6.033..6.036 rows=933 loops=1)
"              Output: e_1.nombre, (count(c_1.id_cita)), (count(CASE WHEN ((c_1.estado)::text = 'cancelada'::text) THEN 1 ELSE NULL::integer END)), (count(CASE WHEN (c_1.fecha > CURRENT_DATE) THEN 1 ELSE NULL::integer END))"
              Buckets: 2048  Batches: 1  Memory Usage: 89kB
              Buffers: shared hit=305
              ->  HashAggregate  (cost=910.85..921.24 rows=1039 width=41) (actual time=5.766..5.891 rows=933 loops=1)
"                    Output: e_1.nombre, count(c_1.id_cita), count(CASE WHEN ((c_1.estado)::text = 'cancelada'::text) THEN 1 ELSE NULL::integer END), count(CASE WHEN (c_1.fecha > CURRENT_DATE) THEN 1 ELSE NULL::integer END)"
                    Group Key: e_1.nombre
                    Batches: 1  Memory Usage: 321kB
                    Buffers: shared hit=305
                    ->  Hash Join  (cost=625.27..892.66 rows=1039 width=34) (actual time=3.851..5.484 rows=1031 loops=1)
"                          Output: e_1.nombre, c_1.id_cita, c_1.estado, c_1.fecha"
                          Hash Cond: ((e_1.nombre)::text = (me_1.nombre_especialidad)::text)
                          Buffers: shared hit=305
                          ->  Seq Scan on public.especialidad e_1  (cost=0.00..207.00 rows=10000 width=17) (actual time=0.005..0.511 rows=10000 loops=1)
"                                Output: e_1.nombre, e_1.descripcion"
                                Buffers: shared hit=107
                          ->  Hash  (cost=612.29..612.29 rows=1039 width=34) (actual time=3.839..3.841 rows=1031 loops=1)
"                                Output: me_1.nombre_especialidad, c_1.id_cita, c_1.estado, c_1.fecha"
                                Buckets: 2048  Batches: 1  Memory Usage: 89kB
                                Buffers: shared hit=198
                                ->  Hash Join  (cost=299.00..612.29 rows=1039 width=34) (actual time=2.106..3.671 rows=1031 loops=1)
"                                      Output: me_1.nombre_especialidad, c_1.id_cita, c_1.estado, c_1.fecha"
                                      Hash Cond: (c_1.dni_medico = me_1.dni_medico)
                                      Buffers: shared hit=198
                                      ->  Seq Scan on public.cita c_1  (cost=0.00..299.00 rows=1039 width=26) (actual time=0.003..1.300 rows=1031 loops=1)
"                                            Output: c_1.id_cita, c_1.dni_paciente, c_1.dni_medico, c_1.fecha, c_1.hora, c_1.estado, c_1.dni_personal, c_1.numero_consultorio"
                                            Filter: (c_1.fecha >= (CURRENT_DATE - '2 mons'::interval))
                                            Rows Removed by Filter: 8969
                                            Buffers: shared hit=124
                                      ->  Hash  (cost=174.00..174.00 rows=10000 width=26) (actual time=2.091..2.092 rows=10000 loops=1)
"                                            Output: me_1.nombre_especialidad, me_1.dni_medico"
                                            Buckets: 16384  Batches: 1  Memory Usage: 704kB
                                            Buffers: shared hit=74
                                            ->  Seq Scan on public.medico_especialidad me_1  (cost=0.00..174.00 rows=10000 width=26) (actual time=0.003..0.815 rows=10000 loops=1)
"                                                  Output: me_1.nombre_especialidad, me_1.dni_medico"
                                                  Buffers: shared hit=74
Planning:
  Buffers: shared hit=54
Planning Time: 1.016 ms
Execution Time: 102.007 ms
